{
  "compilerOptions": {
    // target: 컴파일러가 TypeScript 프로젝트 내의 코드들을 어떤 JavaScript 버전으로 변환할지 설정
    "target": "ES2016",
    "useDefineForClassFields": true,
    // module: TypeScript 파일을 컴파일 후 생성하는 JavaScript 모듈의 형식, 어떤 것인지 정리하면 좋을 듯
    "module": "ESNext",
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "skipLibCheck": true,
    // TypeScript 코드가 어떤 JavaScript 로 변환되었는지 확인할 수 있게 Map 을 생성하는 것!
    // 따라서 에러가 발생했을 때 TypeScript 코드 상 어떤 부분에서 오류가 났는지 확인 가능!
    // 하지만 개발환경에서만 사용하는 것을 추천.
    "sourceMap": true,
    // outDir: 컴파일 후 변환한 JavaScript 파일은 어디에 생성할지 경로 지정
    "outDir": "dist",

    /* Bundler mode */
    "moduleResolution": "bundler",
    "noEmit": true,
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,

    /* JavaScript Support */
    // TypeScript 프로젝트에 JavaScript 파일 허용 여부
    "allowJs": true,
    "checkJs": true,
    "jsx": "react-jsx",

    /* Linting */
    // strict: 엄격한 타입 검사 옵션 활성화, 아래 옵션들이 활성화됨.
    // strictNullChecks: 잠재적으로 null(undefined)이 될 수 있는 값들을 확인
    // strictFunctionTypes:
    // strictBindCallApply:
    // strcitPropertyInitialization:
    // noImplicitAny: type 을 명시하지 않은 경우, 컴파일러가 임의로 Any 를 부여하는 것을 막음.
    // noImplicitThis:
    // alwaysStrict:
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  // 컴파일 시 포함할 경로
  "include": ["src/*"],
  // 컴파일 시 제외할 경로
  "exclude": ["node_modules", "dist"]
}
